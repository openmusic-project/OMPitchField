; OM File Header - Saved 2021/07/09 21:52:18
; (6.2 :patc (om-make-point 147 23) (om-make-point 0 0) (om-make-point 379 494) "No documentation " 183 0 nil nil)
; End File Header
(in-package :om)(load-lib-for (quote ("OMPitchField")))(setf *om-current-persistent* (om-load-patch1 "to_forte_numbers" (quote ((let ((box (om-load-boxout "output2" 1 (om-make-point 122 435) (quote ((om-load-inputfun (quote input-funbox) "out" "out" nil))) "forte-num" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output1" 0 (om-make-point 301 238) (quote ((om-load-inputfun (quote input-funbox) "out" "out" nil))) "card" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 134 25) "no documentation" "pcs" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "1+" (quote 1+) (quote ((om-load-inputfun (quote input-funbox) "NUMBER" "NUMBER" nil))) (om-make-point 138 385) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "EQUAL" (quote equal) (quote ((om-load-inputfun (quote input-funbox) "OBJECT1" "OBJECT1" nil) (om-load-inputfun (quote input-funbox) "OBJECT2" "OBJECT2" nil))) (om-make-point 150 236) nil nil "l" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "POSITION" (quote position) (quote ((om-load-inputfun (quote input-funbox) "ITEM" "ITEM" nil) (om-load-inputfun (quote input-funbox) "SEQUENCE" "SEQUENCE" nil) (om-load-inputkeyword (quote input-keyword) "Choose from this list (:TEST-NOT :TEST :KEY :FROM-END :END :START)" "Keyword input" (quote :test) nil nil))) (om-make-point 131 336) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "LIST-TI-PRIMEFORMS" (quote list-ti-primeforms) (quote ((om-load-inputfun (quote input-funbox) "number of elements in each primeform (or a list of such numbers)" "CARD" 3))) (om-make-point 179 240) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LENGTH" (quote length) (quote ((om-load-inputfun (quote input-funbox) "SEQUENCE" "SEQUENCE" nil))) (om-make-point 207 183) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TI-PRIMEFORM" (quote ti-primeform) (quote ((om-load-inputfun (quote input-funbox) "any member of the set class whose ti-primeform is sought" "PCSET" (list 1 3 4)))) (om-make-point 112 106) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((3 0 0 0 nil 0) (7 0 1 0 nil 0) (5 0 3 0 nil 0) (8 0 5 0 nil 0) (6 0 5 1 nil 0) (4 0 5 2 nil 0) (7 0 6 0 nil 0) (8 0 7 0 nil 0) (2 0 8 0 nil 0))) nil 6.2))
