; OM File Header - Saved 2021/07/09 21:52:18
; (6.2 :patc (om-make-point 24 24) (om-make-point 0 0) (om-make-point 475 301) "No documentation " 183 0 nil nil)
; End File Header
(in-package :om)(load-lib-for (quote ("OMPitchField")))(setf *om-current-persistent* (om-load-patch1 "from_forte_numbers" (quote ((let ((box (om-load-boxin "input1" 1 (om-make-point 215 35) "no documentation" "forte-num" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 85 35) "no documentation" "card" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 195 230) (quote ((om-load-inputfun (quote input-funbox) "out" "out" nil))) "primeform" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment11" (om-make-point 131 26) (quote "Rahn prime form") "" (om-make-point 65 241) nil (om-make-color 0 4/5 0) (om-make-font "Geneva" 12 :family "Geneva" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment1" (om-make-point 161 23) (quote "Forte number (no 'Z')") "" (om-make-point 182 21) nil (om-make-color 0 4/5 0) (om-make-font "Geneva" 12 :family "Geneva" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "1-" (quote 1-) (quote ((om-load-inputfun (quote input-funbox) "NUMBER" "NUMBER" nil))) (om-make-point 205 107) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "NTH" (quote nth) (quote ((om-load-inputfun (quote input-funbox) "N" "N" nil) (om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 187 181) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "LIST-TI-PRIMEFORMS" (quote list-ti-primeforms) (quote ((om-load-inputfun (quote input-funbox) "number of elements in each primeform (or a list of such numbers)" "CARD" 3))) (om-make-point 79 101) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 96 24) (quote "Cardinality") "" (om-make-point 70 13) nil (om-make-color 0 4/5 0) (om-make-font "Geneva" 12 :family "Geneva" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((6 0 2 0 nil 0) (0 0 5 0 nil 0) (5 0 6 0 nil 0) (7 0 6 1 nil 0) (1 0 7 0 nil 0))) nil 6.2))
