; OM File Header - Saved 2021/07/09 21:53:32
; (6.2 :patc (om-make-point 24 78) (om-make-point 0 0) (om-make-point 820 826) "No documentation " 183 0 nil "2021/07/09 21:53:28")
; End File Header
(in-package :om)(load-lib-for (quote ("OMPitchField")))(setf *om-current-persistent* (om-load-patch1 "4-stages" (quote ((let ((box (om-load-boxcall (quote genfun) "MAKE-CYC-PFIELD" (quote make-cyc-pfield) (quote ((om-load-inputfun (quote input-funbox) "list of positive integers" "GENERATOR" (list 1 4)) (om-load-inputfun (quote input-funbox) "integer" "ORIGIN" 0) (om-load-inputfun (quote input-funbox) "integer" "LO" -12) (om-load-inputfun (quote input-funbox) "integer" "HI" 24))) (om-make-point 368 108) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment21" (om-make-point 72 53) (quote "*FILTER*$the search$results") "" (om-make-point 521 445) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment2" (om-make-point 69 24) (quote "*SEARCH*") "" (om-make-point 93 447) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LENGTH1" (quote length) (quote ((om-load-inputfun (quote input-funbox) "SEQUENCE" "SEQUENCE" nil))) (om-make-point 479 703) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FIND-PCSET-IN-FIELD" (quote find-pcset-in-field) (quote ((om-load-inputfun (quote input-funbox) "list of mod-12 integers (or list of such lists)" "PCSET" (list 0 2)) (om-load-inputfun (quote input-funbox) "list of integers" "FIELD" (list 0 2 5 7 10 12 15)))) (om-make-point 227 463) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "P->MC21" (quote p->mc) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" nil))) (om-make-point 183 633) nil nil nil "p->mc" 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ21" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "LMIDIC" (list 6000)) (om-load-inputfun (quote input-funbox) "no documentation" "LONSET" (list 0 1000)) (om-load-inputfun (quote input-funbox) "no documentation" "LDUR" (list 1000)) (om-load-inputfun (quote input-funbox) "no documentation" "LVEL" (list 100)) (om-load-inputfun (quote input-funbox) "no documentation" "LOFFSET" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "no documentation" "LEGATO" 0))) (om-make-point 330 699) (om-make-point 91 58) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8400 7300 6300 5200 6600) (8400 7300 6300 5200 7800) (6300 5200 6600 5500 5700) (6300 5200 6600 7900 5700) (6300 5200 7800 5500 5700) (6300 5200 7800 7900 5700) (6600 5500 5700 8200 8400) (6600 7900 5700 8200 8400) (7800 5500 5700 8200 8400) (7800 7900 5700 8200 8400) (5500 6800 8200 7100 7300) (7900 6800 8200 7100 7300) (6800 5700 7100 8400 5000) (6800 5700 7100 8400 6200) (5700 8200 8400 7300 6300) (8200 7100 7300 5000 5200) (8200 7100 7300 6200 5200) (7300 6300 5200 6600 5500) (7300 6300 5200 6600 7900) (7300 6300 5200 7800 5500) (7300 6300 5200 7800 7900) (5200 6600 5500 5700 8200) (5200 6600 7900 5700 8200) (5200 7800 5500 5700 8200) (5200 7800 7900 5700 8200) (6600 6800 5700 7100 8400) (7800 6800 5700 7100 8400) (5500 5700 8200 8400 7300) (7900 5700 8200 8400 7300) (6800 8200 7100 7300 5000) (6800 8200 7100 7300 6200) (5700 7100 8400 5000 6300) (5700 7100 8400 6200 6300) (8200 8400 7300 6300 5200) (7300 5000 5200 6600 5500) (7300 5000 5200 6600 7900) (7300 5000 5200 7800 5500) (7300 5000 5200 7800 7900) (7300 6200 5200 6600 5500) (7300 6200 5200 6600 7900) (7300 6200 5200 7800 5500) (7300 6200 5200 7800 7900) (6300 5200 6600 6800 5700) (6300 5200 7800 6800 5700) (6600 5500 5700 7100 8400) (6600 7900 5700 7100 8400) (7800 5500 5700 7100 8400) (7800 7900 5700 7100 8400) (5500 6800 8200 8400 7300) (7900 6800 8200 8400 7300) (6800 5700 7100 7300 5000) (6800 5700 7100 7300 6200) (5700 8200 8400 5000 6300) (5700 8200 8400 6200 6300) (8200 7100 7300 6300 5200) (8400 7300 6300 5200 5500) (8400 7300 6300 5200 7900) (6300 5200 6600 5500 8200) (6300 5200 6600 7900 8200) (6300 5200 7800 5500 8200) (6300 5200 7800 7900 8200) (6600 5500 5700 8200 7300) (6600 7900 5700 8200 7300) (7800 5500 5700 8200 7300) (7800 7900 5700 8200 7300) (5500 6800 8200 7100 5000) (5500 6800 8200 7100 6200) (7900 6800 8200 7100 5000) (7900 6800 8200 7100 6200) (6800 5700 7100 8400 6300) (5700 8200 8400 7300 5200) (7100 8400 5000 6300 6600) (7100 8400 5000 6300 7800) (7100 8400 6200 6300 6600) (7100 8400 6200 6300 7800) (8400 6300 5200 6600 5500) (8400 6300 5200 6600 7900) (8400 6300 5200 7800 5500) (8400 6300 5200 7800 7900) (6300 6600 5500 5700 8200) (6300 6600 7900 5700 8200) (6300 7800 5500 5700 8200) (6300 7800 7900 5700 8200) (5200 5500 6800 8200 7100) (5200 7900 6800 8200 7100) (6600 5700 8200 8400 7300) (7800 5700 8200 8400 7300) (5500 8200 7100 7300 5000) (5500 8200 7100 7300 6200) (7900 8200 7100 7300 5000) (7900 8200 7100 7300 6200) (6800 7100 8400 5000 6300) (6800 7100 8400 6200 6300) (5700 8400 7300 6300 5200) (8400 7300 6300 5200 6800) (6300 5200 6600 5500 7100) (6300 5200 6600 7900 7100) (6300 5200 7800 5500 7100) (6300 5200 7800 7900 7100) (6600 5500 5700 8200 5000) (6600 5500 5700 8200 6200) (6600 7900 5700 8200 5000) (6600 7900 5700 8200 6200) (7800 5500 5700 8200 5000) (7800 5500 5700 8200 6200) (7800 7900 5700 8200 5000) (7800 7900 5700 8200 6200) (5500 6800 8200 7100 6300) (7900 6800 8200 7100 6300) (6800 5700 7100 8400 5200) (8200 7100 7300 5000 6600) (8200 7100 7300 5000 7800) (8200 7100 7300 6200 6600) (8200 7100 7300 6200 7800) (7100 8400 5000 6300 5500) (7100 8400 5000 6300 7900) (7100 8400 6200 6300 5500) (7100 8400 6200 6300 7900) (5000 6300 6600 5500 5700) (5000 6300 6600 7900 5700) (5000 6300 7800 5500 5700) (5000 6300 7800 7900 5700) (6200 6300 6600 5500 5700) (6200 6300 6600 7900 5700) (6200 6300 7800 5500 5700) (6200 6300 7800 7900 5700) (6300 5200 5500 6800 8200) (6300 5200 7900 6800 8200) (6600 5500 8200 7100 7300) (6600 7900 8200 7100 7300) (7800 5500 8200 7100 7300) (7800 7900 8200 7100 7300) (5500 6800 7100 8400 5000) (5500 6800 7100 8400 6200) (7900 6800 7100 8400 5000) (7900 6800 7100 8400 6200) (6800 5700 8400 7300 6300) (5700 8200 7300 5000 5200) (5700 8200 7300 6200 5200) (7100 8400 6300 5200 6600) (7100 8400 6300 5200 7800) (8400 5000 6300 6600 5500) (8400 5000 6300 6600 7900) (8400 5000 6300 7800 5500) (8400 5000 6300 7800 7900) (8400 6200 6300 6600 5500) (8400 6200 6300 6600 7900) (8400 6200 6300 7800 5500) (8400 6200 6300 7800 7900) (7300 6300 5200 5500 6800) (7300 6300 5200 7900 6800) (5200 6600 5500 8200 7100) (5200 6600 7900 8200 7100) (5200 7800 5500 8200 7100) (5200 7800 7900 8200 7100) (6600 6800 5700 8400 7300) (7800 6800 5700 8400 7300) (5500 5700 8200 7300 5000) (5500 5700 8200 7300 6200) (7900 5700 8200 7300 5000) (7900 5700 8200 7300 6200) (6800 8200 7100 5000 6300) (6800 8200 7100 6200 6300) (5700 7100 8400 6300 5200) (8400 7300 6300 6600 5500) (8400 7300 6300 6600 7900) (8400 7300 6300 7800 5500) (8400 7300 6300 7800 7900) (7300 5000 5200 5500 6800) (7300 5000 5200 7900 6800) (7300 6200 5200 5500 6800) (7300 6200 5200 7900 6800) (6300 5200 6600 5700 8200) (6300 5200 7800 5700 8200) (6600 5500 5700 8400 7300) (6600 7900 5700 8400 7300) (7800 5500 5700 8400 7300) (7800 7900 5700 8400 7300) (5500 6800 8200 7300 5000) (5500 6800 8200 7300 6200) (7900 6800 8200 7300 5000) (7900 6800 8200 7300 6200) (6800 5700 7100 5000 6300) (6800 5700 7100 6200 6300) (5700 8200 8400 6300 5200) (8400 7300 5200 6600 5500) (8400 7300 5200 6600 7900) (8400 7300 5200 7800 5500) (8400 7300 5200 7800 7900) (5000 6300 6600 6800 5700) (5000 6300 7800 6800 5700) (6200 6300 6600 6800 5700) (6200 6300 7800 6800 5700) (6300 5200 5500 5700 8200) (6300 5200 7900 5700 8200) (6600 5500 8200 8400 7300) (6600 7900 8200 8400 7300) (7800 5500 8200 8400 7300) (7800 7900 8200 8400 7300) (5500 6800 7100 7300 5000) (5500 6800 7100 7300 6200) (7900 6800 7100 7300 5000) (7900 6800 7100 7300 6200) (6800 5700 8400 5000 6300) (6800 5700 8400 6200 6300) (5700 8200 7300 6300 5200) (5000 6300 6600 5500 8200) (5000 6300 6600 7900 8200) (5000 6300 7800 5500 8200) (5000 6300 7800 7900 8200) (6200 6300 6600 5500 8200) (6200 6300 6600 7900 8200) (6200 6300 7800 5500 8200) (6200 6300 7800 7900 8200) (6300 5200 5500 6800 7100) (6300 5200 7900 6800 7100) (6600 5500 8200 7100 5000) (6600 5500 8200 7100 6200) (6600 7900 8200 7100 5000) (6600 7900 8200 7100 6200) (7800 5500 8200 7100 5000) (7800 5500 8200 7100 6200) (7800 7900 8200 7100 5000) (7800 7900 8200 7100 6200) (5500 6800 7100 8400 6300) (7900 6800 7100 8400 6300) (6800 5700 8400 7300 5200) (8200 7100 5000 6300 6600) (8200 7100 5000 6300 7800) (8200 7100 6200 6300 6600) (8200 7100 6200 6300 7800) (7100 8400 6300 5200 5500) (7100 8400 6300 5200 7900) (8400 6300 5200 5500 6800) (8400 6300 5200 7900 6800) (6300 6600 5500 8200 7100) (6300 6600 7900 8200 7100) (6300 7800 5500 8200 7100) (6300 7800 7900 8200 7100) (5200 5500 6800 7100 8400) (5200 7900 6800 7100 8400) (6600 5700 8200 7300 5000) (6600 5700 8200 7300 6200) (7800 5700 8200 7300 5000) (7800 5700 8200 7300 6200) (5500 8200 7100 5000 6300) (5500 8200 7100 6200 6300) (7900 8200 7100 5000 6300) (7900 8200 7100 6200 6300) (6800 7100 8400 6300 5200) (7100 5000 6300 6600 5500) (7100 5000 6300 6600 7900) (7100 5000 6300 7800 5500) (7100 5000 6300 7800 7900) (7100 6200 6300 6600 5500) (7100 6200 6300 6600 7900) (7100 6200 6300 7800 5500) (7100 6200 6300 7800 7900) (8400 7300 5200 5500 6800) (8400 7300 5200 7900 6800) (5000 6300 6600 5700 8200) (5000 6300 7800 5700 8200) (6200 6300 6600 5700 8200) (6200 6300 7800 5700 8200) (6300 5200 5500 8200 7100) (6300 5200 7900 8200 7100) (6600 5500 8200 7300 5000) (6600 5500 8200 7300 6200) (6600 7900 8200 7300 5000) (6600 7900 8200 7300 6200) (7800 5500 8200 7300 5000) (7800 5500 8200 7300 6200) (7800 7900 8200 7300 5000) (7800 7900 8200 7300 6200) (5500 6800 7100 5000 6300) (5500 6800 7100 6200 6300) (7900 6800 7100 5000 6300) (7900 6800 7100 6200 6300) (6800 5700 8400 6300 5200) (7100 8400 6300 6600 5500) (7100 8400 6300 6600 7900) (7100 8400 6300 7800 5500) (7100 8400 6300 7800 7900) (7300 5000 5200 6600 6800) (7300 5000 5200 7800 6800) (7300 6200 5200 6600 6800) (7300 6200 5200 7800 6800) (6300 5200 6600 6800 8200) (6300 5200 7800 6800 8200) (6600 5500 5700 7100 7300) (6600 7900 5700 7100 7300) (7800 5500 5700 7100 7300) (7800 7900 5700 7100 7300) (5500 6800 8200 8400 5000) (5500 6800 8200 8400 6200) (7900 6800 8200 8400 5000) (7900 6800 8200 8400 6200) (6800 5700 7100 7300 6300) (5700 8200 8400 5000 5200) (5700 8200 8400 6200 5200) (7100 8400 5000 5200 6600) (7100 8400 5000 5200 7800) (7100 8400 6200 5200 6600) (7100 8400 6200 5200 7800) (8400 5000 5200 6600 5500) (8400 5000 5200 6600 7900) (8400 5000 5200 7800 5500) (8400 5000 5200 7800 7900) (8400 6200 5200 6600 5500) (8400 6200 5200 6600 7900) (8400 6200 5200 7800 5500) (8400 6200 5200 7800 7900) (5000 5200 6600 6800 5700) (5000 5200 7800 6800 5700) (6200 5200 6600 6800 5700) (6200 5200 7800 6800 5700) (5200 6600 6800 8200 7100) (5200 7800 6800 8200 7100) (6600 6800 8200 8400 7300) (7800 6800 8200 8400 7300) (5500 5700 7100 7300 5000) (5500 5700 7100 7300 6200) (7900 5700 7100 7300 5000) (7900 5700 7100 7300 6200) (6800 8200 8400 5000 6300) (6800 8200 8400 6200 6300) (5700 7100 7300 6300 5200) (7300 6300 5200 6600 5700) (7300 6300 5200 7800 5700) (5200 6600 5500 5700 8400) (5200 6600 7900 5700 8400) (5200 7800 5500 5700 8400) (5200 7800 7900 5700 8400) (6600 6800 5700 7100 5000) (6600 6800 5700 7100 6200) (7800 6800 5700 7100 5000) (7800 6800 5700 7100 6200) (5500 5700 8200 8400 6300) (7900 5700 8200 8400 6300) (6800 8200 7100 7300 5200) (8200 8400 7300 6300 6600) (8200 8400 7300 6300 7800) (7100 7300 5000 5200 5500) (7100 7300 5000 5200 7900) (7100 7300 6200 5200 5500) (7100 7300 6200 5200 7900) (7300 5200 6600 5500 5700) (7300 5200 6600 7900 5700) (7300 5200 7800 5500 5700) (7300 5200 7800 7900 5700) (6300 6600 6800 5700 7100) (6300 7800 6800 5700 7100) (5200 5500 5700 8200 8400) (5200 7900 5700 8200 8400) (6600 5700 7100 8400 5000) (6600 5700 7100 8400 6200) (7800 5700 7100 8400 5000) (7800 5700 7100 8400 6200) (5500 8200 8400 7300 6300) (7900 8200 8400 7300 6300) (6800 7100 7300 5000 5200) (6800 7100 7300 6200 5200) (8200 7300 6300 5200 6600) (8200 7300 6300 5200 7800) (5000 5200 6600 5500 8200) (5000 5200 6600 7900 8200) (5000 5200 7800 5500 8200) (5000 5200 7800 7900 8200) (6200 5200 6600 5500 8200) (6200 5200 6600 7900 8200) (6200 5200 7800 5500 8200) (6200 5200 7800 7900 8200) (5200 6600 6800 5700 8400) (5200 7800 6800 5700 8400) (6600 6800 8200 7100 5000) (6600 6800 8200 7100 6200) (7800 6800 8200 7100 5000) (7800 6800 8200 7100 6200) (5500 5700 7100 8400 6300) (7900 5700 7100 8400 6300) (6800 8200 8400 7300 5200) (8200 8400 5000 6300 6600) (8200 8400 5000 6300 7800) (8200 8400 6200 6300 6600) (8200 8400 6200 6300 7800) (7100 7300 6300 5200 5500) (7100 7300 6300 5200 7900) (8400 6300 5200 6600 6800) (8400 6300 5200 7800 6800) (6300 6600 5500 5700 7100) (6300 6600 7900 5700 7100) (6300 7800 5500 5700 7100) (6300 7800 7900 5700 7100) (5200 5500 6800 8200 8400) (5200 7900 6800 8200 8400) (6600 5700 8200 8400 5000) (6600 5700 8200 8400 6200) (7800 5700 8200 8400 5000) (7800 5700 8200 8400 6200) (5500 8200 7100 7300 6300) (7900 8200 7100 7300 6300) (6800 7100 8400 5000 5200) (6800 7100 8400 6200 5200) (8200 7300 5000 5200 6600) (8200 7300 5000 5200 7800) (8200 7300 6200 5200 6600) (8200 7300 6200 5200 7800) (8400 5000 6300 6600 6800) (8400 5000 6300 7800 6800) (8400 6200 6300 6600 6800) (8400 6200 6300 7800 6800) (7300 6300 5200 5500 5700) (7300 6300 5200 7900 5700) (5200 6600 5500 8200 8400) (5200 6600 7900 8200 8400) (5200 7800 5500 8200 8400) (5200 7800 7900 8200 8400) (6600 6800 5700 8400 5000) (6600 6800 5700 8400 6200) (7800 6800 5700 8400 5000) (7800 6800 5700 8400 6200) (5500 5700 8200 7300 6300) (7900 5700 8200 7300 6300) (6800 8200 7100 5000 5200) (6800 8200 7100 6200 5200) (8200 8400 7300 5200 6600) (8200 8400 7300 5200 7800) (7300 6300 6600 5500 5700) (7300 6300 6600 7900 5700) (7300 6300 7800 5500 5700) (7300 6300 7800 7900 5700) (5000 5200 5500 6800 8200) (5000 5200 7900 6800 8200) (6200 5200 5500 6800 8200) (6200 5200 7900 6800 8200) (5200 6600 5700 8200 8400) (5200 7800 5700 8200 8400) (6600 6800 7100 8400 5000) (6600 6800 7100 8400 6200) (7800 6800 7100 8400 5000) (7800 6800 7100 8400 6200) (5500 5700 8400 7300 6300) (7900 5700 8400 7300 6300) (6800 8200 7300 5000 5200) (6800 8200 7300 6200 5200) (8200 8400 6300 5200 6600) (8200 8400 6300 5200 7800) (8400 7300 5200 6600 6800) (8400 7300 5200 7800 6800) (5000 6300 6600 6800 8200) (5000 6300 7800 6800 8200) (6200 6300 6600 6800 8200) (6200 6300 7800 6800 8200) (6300 5200 5500 5700 7100) (6300 5200 7900 5700 7100) (6600 5500 8200 8400 5000) (6600 5500 8200 8400 6200) (6600 7900 8200 8400 5000) (6600 7900 8200 8400 6200) (7800 5500 8200 8400 5000) (7800 5500 8200 8400 6200) (7800 7900 8200 8400 5000) (7800 7900 8200 8400 6200) (5500 6800 7100 7300 6300) (7900 6800 7100 7300 6300) (6800 5700 8400 5000 5200) (6800 5700 8400 6200 5200) (8200 7100 5000 5200 6600) (8200 7100 5000 5200 7800) (8200 7100 6200 5200 6600) (8200 7100 6200 5200 7800) (8400 5000 5200 5500 6800) (8400 5000 5200 7900 6800) (8400 6200 5200 5500 6800) (8400 6200 5200 7900 6800) (5000 5200 6600 5700 8200) (5000 5200 7800 5700 8200) (6200 5200 6600 5700 8200) (6200 5200 7800 5700 8200) (5200 6600 6800 7100 8400) (5200 7800 6800 7100 8400) (6600 6800 8200 7300 5000) (6600 6800 8200 7300 6200) (7800 6800 8200 7300 5000) (7800 6800 8200 7300 6200) (5500 5700 7100 5000 6300) (5500 5700 7100 6200 6300) (7900 5700 7100 5000 6300) (7900 5700 7100 6200 6300) (6800 8200 8400 6300 5200) (7100 7300 6300 6600 5500) (7100 7300 6300 6600 7900) (7100 7300 6300 7800 5500) (7100 7300 6300 7800 7900) (8400 7300 6300 6600 5700) (8400 7300 6300 7800 5700) (7300 5000 5200 5500 8200) (7300 5000 5200 7900 8200) (7300 6200 5200 5500 8200) (7300 6200 5200 7900 8200) (6300 5200 6600 5700 8400) (6300 5200 7800 5700 8400) (6600 5500 5700 8400 6300) (6600 7900 5700 8400 6300) (7800 5500 5700 8400 6300) (7800 7900 5700 8400 6300) (5500 6800 8200 7300 5200) (7900 6800 8200 7300 5200) (5700 8200 8400 6300 6600) (5700 8200 8400 6300 7800) (8200 7100 7300 5200 5500) (8200 7100 7300 5200 7900) (8400 5000 6300 6600 5700) (8400 5000 6300 7800 5700) (8400 6200 6300 6600 5700) (8400 6200 6300 7800 5700) (7300 6300 5200 5500 8200) (7300 6300 5200 7900 8200) (5200 6600 5500 8200 7300) (5200 6600 7900 8200 7300) (5200 7800 5500 8200 7300) (5200 7800 7900 8200 7300) (6600 6800 5700 8400 6300) (7800 6800 5700 8400 6300) (5500 5700 8200 7300 5200) (7900 5700 8200 7300 5200) (5700 7100 8400 6300 6600) (5700 7100 8400 6300 7800) (8200 8400 7300 5200 5500) (8200 8400 7300 5200 7900) (8400 7300 5200 6600 5700) (8400 7300 5200 7800 5700) (5000 6300 6600 6800 7100) (5000 6300 7800 6800 7100) (6200 6300 6600 6800 7100) (6200 6300 7800 6800 7100) (6300 5200 5500 5700 8400) (6300 5200 7900 5700 8400) (6600 5500 8200 8400 6300) (6600 7900 8200 8400 6300) (7800 5500 8200 8400 6300) (7800 7900 8200 8400 6300) (5500 6800 7100 7300 5200) (7900 6800 7100 7300 5200) (5700 8200 7300 6300 6600) (5700 8200 7300 6300 7800) (8200 7100 5000 5200 5500) (8200 7100 5000 5200 7900) (8200 7100 6200 5200 5500) (8200 7100 6200 5200 7900) (7300 6300 6600 5500 8200) (7300 6300 6600 7900 8200) (7300 6300 7800 5500 8200) (7300 6300 7800 7900 8200) (5000 5200 5500 6800 7100) (5000 5200 7900 6800 7100) (6200 5200 5500 6800 7100) (6200 5200 7900 6800 7100) (5200 6600 5700 8200 7300) (5200 7800 5700 8200 7300) (6600 6800 7100 8400 6300) (7800 6800 7100 8400 6300) (5500 5700 8400 7300 5200) (7900 5700 8400 7300 5200) (5700 7100 5000 6300 6600) (5700 7100 5000 6300 7800) (5700 7100 6200 6300 6600) (5700 7100 6200 6300 7800) (8200 8400 6300 5200 5500) (8200 8400 6300 5200 7900) (8400 5000 5200 6600 5700) (8400 5000 5200 7800 5700) (8400 6200 5200 6600 5700) (8400 6200 5200 7800 5700) (5000 5200 6600 6800 7100) (5000 5200 7800 6800 7100) (6200 5200 6600 6800 7100) (6200 5200 7800 6800 7100) (5200 6600 6800 8200 7300) (5200 7800 6800 8200 7300) (6600 6800 8200 8400 6300) (7800 6800 8200 8400 6300) (5500 5700 7100 7300 5200) (7900 5700 7100 7300 5200) (5700 7100 7300 6300 6600) (5700 7100 7300 6300 7800) (8200 8400 5000 5200 5500) (8200 8400 5000 5200 7900) (8200 8400 6200 5200 5500) (8200 8400 6200 5200 7900))) :lonset (quote (0 500 1500 2000 2500 3000 4000 4500 5000 5500 6500 7000 8000 8500 9500 10500 11000 12000 12500 13000 13500 14500 15000 15500 16000 17000 17500 18500 19000 20000 20500 21500 22000 23000 24000 24500 25000 25500 26000 26500 27000 27500 28500 29000 30000 30500 31000 31500 32500 33000 34000 34500 35500 36000 37000 38000 38500 39500 40000 40500 41000 42000 42500 43000 43500 44500 45000 45500 46000 47000 48000 49000 49500 50000 50500 51500 52000 52500 53000 54000 54500 55000 55500 56500 57000 58000 58500 59500 60000 60500 61000 62000 62500 63500 64500 65500 66000 66500 67000 68000 68500 69000 69500 70000 70500 71000 71500 72500 73000 74000 75000 75500 76000 76500 77500 78000 78500 79000 80500 81000 81500 82000 82500 83000 83500 84000 85000 85500 86500 87000 87500 88000 89000 89500 90000 90500 91500 92500 93000 94000 94500 95500 96000 96500 97000 97500 98000 98500 99000 100000 100500 101500 102000 102500 103000 104000 104500 105500 106000 106500 107000 108000 108500 109500 110500 111000 111500 112000 113000 113500 114000 114500 115500 116000 117000 117500 118000 118500 119500 120000 120500 121000 122000 122500 123500 124500 125000 125500 126000 127000 127500 128000 128500 129500 130000 131000 131500 132000 132500 133500 134000 134500 135000 136000 136500 137500 138500 139000 139500 140000 140500 141000 141500 142000 143000 143500 144500 145000 145500 146000 146500 147000 147500 148000 149000 149500 150500 151500 152000 152500 153000 154000 154500 155500 156000 157000 157500 158000 158500 159500 160000 161000 161500 162000 162500 163500 164000 164500 165000 166000 167000 167500 168000 168500 169000 169500 170000 170500 172000 172500 173500 174000 174500 175000 176000 176500 177500 178000 178500 179000 179500 180000 180500 181000 182000 182500 183000 183500 184500 185500 186000 186500 187000 188500 189000 189500 190000 191000 191500 192500 193000 193500 194000 195000 195500 196000 196500 197500 198500 199000 200000 200500 201000 201500 202500 203000 203500 204000 204500 205000 205500 206000 207000 207500 208000 208500 209500 210000 211000 211500 212500 213000 213500 214000 215000 215500 216500 217500 218000 219000 219500 220000 220500 221500 222000 222500 223000 224000 224500 225500 226500 227000 228000 228500 229000 229500 230500 231000 231500 232000 233000 233500 234500 235000 236000 236500 237000 237500 238500 239000 240000 240500 241500 242000 243000 243500 244000 244500 245000 245500 246000 246500 247500 248000 249000 249500 250000 250500 251500 252000 253000 254000 254500 255000 255500 256500 257000 258000 258500 259500 260000 260500 261000 262000 262500 263500 264000 264500 265000 266000 266500 267500 268000 269000 269500 270000 270500 271500 272000 272500 273000 274000 274500 275500 276000 276500 277000 278000 278500 279000 279500 280500 281000 282000 282500 283500 284000 285000 285500 286000 286500 287500 288000 288500 289000 290000 290500 291500 292000 292500 293000 294000 294500 295500 296000 297000 297500 298500 299000 300000 300500 301000 301500 302500 303000 304000 304500 305000 305500 306000 306500 307000 307500 308500 309000 310000 310500 311500 312000 312500 313000 314000 314500 315000 315500 316500 317000 317500 318000 319000 319500 320500 321000 321500 322000 323000 323500 324000 324500 325500 326500 327000 327500 328000 329500 330000 331000 331500 332000 332500 333500 334000 335000 335500 336000 336500 337500 338000 339000 339500 340500 341000 342000 342500 343000 343500 344500 345000 346000 346500 347000 347500 348500 349000 350000 350500 351500 352000 353000 353500 354500 355000 356000 356500 357000 357500 358500 359000 360000 360500 361000 361500 362500 363000 364000 364500 365500 366000 366500 367000 368000 368500 369000 369500 370500 371000 371500 372000 373000 373500 374500 375000 376000 376500 377500 378000 378500 379000 380000 380500 381500 382000 382500 383000 384000 384500 385000 385500 386500 387000 388000 388500 389500 390000 391000 391500 392500 393000 393500 394000 395000)) :ldur (quotelvel (quoteloffset (quote ((0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0))) :lchan (quote ((1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.2 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (score-mode cursor-mode show-stems obj-mode palette-mode winpos winsize mode grillestep notechancolor? zoom inport outport deltapict cmnpref staff fontsize approx microplay scale)) (list 0 (quote :normal) (quote t) 0 0 (om-make-point 0 0) (om-make-point 500 280) 0 1000 nil 1/100 0 0 (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2 nil nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ2" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "LMIDIC" (list 6000)) (om-load-inputfun (quote input-funbox) "no documentation" "LONSET" (list 0 1000)) (om-load-inputfun (quote input-funbox) "no documentation" "LDUR" (list 1000)) (om-load-inputfun (quote input-funbox) "no documentation" "LVEL" (list 100)) (om-load-inputfun (quote input-funbox) "no documentation" "LOFFSET" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "no documentation" "LEGATO" 0))) (om-make-point 632 700) (om-make-point 91 58) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5000 5200 5500 6600 7300) (5500 5700 6600 7300 8200) (6200 6300 7100 7800 8400) (6200 6300 7100 7900 8400) (5500 5700 6200 7300 8200) (6200 6300 6800 7100 8200) (5500 5700 6600 7300 8400) (6200 6300 6600 7100 8200) (6200 6300 7100 7800 8200) (6200 6300 7100 7900 8200) (6200 6300 6600 7100 7900) (6200 6300 6800 7100 7900) (5000 5200 5700 6800 7800) (5500 5700 6300 6600 7100) (5500 5700 6300 7100 7800) (6200 6300 6800 7800 8400) (5500 5700 6300 7300 8200) (5500 5700 6300 6600 7300) (5500 5700 6300 7300 7800) (5500 5700 6300 7300 8400) (6200 6300 6800 7800 8200) (6200 6300 6800 7100 7800))) :lonset (quote (0 1000 2000 3000 4500 5500 6500 7500 8000 9000 10000 11500 12500 13500 14000 15000 16000 17000 17500 18500 19500 20500 21500)) :ldur (quote ((1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000))) :lvel (quote ((100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100) (100 100 100 100 100))) :loffset (quote ((0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0))) :lchan (quote ((1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.2 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (score-mode cursor-mode show-stems obj-mode palette-mode winpos winsize mode grillestep notechancolor? zoom inport outport deltapict cmnpref staff fontsize approx microplay scale)) (list 0 (quote :normal) (quote t) 1 0 (om-make-point 0 0) (om-make-point 500 280) 0 1000 nil 1 0 0 (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote gf) 24 2 nil nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "P->MC2" (quote p->mc) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" nil))) (om-make-point 551 636) nil nil nil "p->mc" 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "NESTING->TIMING11" (quote nesting->timing) (quote ((om-load-inputfun (quote input-funbox) "nested list of numbers" "LST" nil) (om-load-inputfun (quote input-funbox) "number of nested levels to flatten [or if negative, abs val is number of nested levels to remain after flattening]" "LEVELS" -1) (om-load-inputfun (quote input-funbox) "time unit separating members of same sublist (multiplied at sublist boundaries)" "TIME-UNIT" 500))) (om-make-point 567 564) nil nil nil nil 2))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list6" (quote list) (quote nil) (om-make-point 398 440) (om-make-point 104 36) (list (list 1 2) (list 3 11)) "((1 2) (3 11))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MAKE-SPACING-TEST" (quote make-spacing-test) (quote ((om-load-inputfun (quote input-funbox) "list of pairs of integers, SECOND of each pair no smaller than FIRST" "SPACING-PAIRS" (list (list 5 10) (list 1 5))))) (om-make-point 374 480) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FILTER-CHORDLIST1" (quote filter-chordlist) (quote ((om-load-inputfun (quote input-funbox) "test" "TEST" nil) (om-load-inputfun (quote input-funbox) "list of chords" "CHORDLIST" nil) (om-load-inputfunmenu1 (quote input-funmenu) "" "REJECT" (quote t) (list (list "  pass" nil) (list "> reject" (quote t)))))) (om-make-point 401 574) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "LIST-TI-PRIMEFORMS" (quote list-ti-primeforms) (quote ((om-load-inputfun (quote input-funbox) "number of elements in each primeform (or a list of such numbers)" "CARD" 5) (om-load-inputfunmenu1 (quote input-funmenu) "modulus of the pc space" "N" 12 (list (list "12" 12) (list "24" 24))))) (om-make-point 226 100) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 237 65) (om-make-point 20 28) 5 "5" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FILTER-CHORDLIST" (quote filter-chordlist) (quote ((om-load-inputfun (quote input-funbox) "test" "TEST" nil) (om-load-inputfun (quote input-funbox) "list of chords" "CHORDLIST" nil) (om-load-inputfunmenu1 (quote input-funmenu) "" "REJECT" nil (list (list "> pass" nil) (list "  reject" (quote t)))))) (om-make-point 199 185) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MAKE-INCLUSION-TEST" (quote make-inclusion-test) (quote ((om-load-inputfun (quote input-funbox) "list of triples: FIRST integer in [1 , 6] or integer list beginning :t, :ti, :tp, or :tip; SECOND & THIRD integers" "INCSPEC-TRIPLES" (list (list 5 0 1))))) (om-make-point 65 107) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list1" (quote list) (quote nil) (om-make-point 70 76) (om-make-point 143 28) (list (list 5 1 2) (list (list (quote :t) 0 1 2) 0 0)) "((5 1 2) ((:t 0 1 2) 0 0))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MAKE-TI-SETCLASS" (quote make-ti-setclass) (quote ((om-load-inputfun (quote input-funbox) "any member of the desired ti-setclass (or list containing one member of each desired ti-setclass)" "PCSET" (list 0 1 2)))) (om-make-point 215 263) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "NESTING->TIMING" (quote nesting->timing) (quote ((om-load-inputfun (quote input-funbox) "nested list of numbers" "LST" nil) (om-load-inputfun (quote input-funbox) "number of nested levels to flatten [or if negative, abs val is number of nested levels to remain after flattening]" "LEVELS" -1) (om-load-inputfun (quote input-funbox) "time unit separating members of same sublist (multiplied at sublist boundaries)" "TIME-UNIT" 500))) (om-make-point 74 210) nil nil nil nil 2))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "P->MC" (quote p->mc) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" nil))) (om-make-point 47 283) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "LMIDIC" (list 6000)) (om-load-inputfun (quote input-funbox) "no documentation" "LONSET" (list 0 1000)) (om-load-inputfun (quote input-funbox) "no documentation" "LDUR" (list 1000)) (om-load-inputfun (quote input-funbox) "no documentation" "LVEL" (list 100)) (om-load-inputfun (quote input-funbox) "no documentation" "LOFFSET" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "no documentation" "LEGATO" 0))) (om-make-point 85 362) (om-make-point 91 58) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000 6100 6300 6400 6600) (6100 6200 6400 6500 6700) (6200 6300 6500 6600 6800) (6300 6400 6600 6700 6900) (6400 6500 6700 6800 7000) (6500 6600 6800 6900 7100) (6600 6700 6900 7000 6000) (6700 6800 7000 7100 6100) (6800 6900 7100 6000 6200) (6900 7000 6000 6100 6300) (7000 7100 6100 6200 6400) (7100 6000 6200 6300 6500) (6000 6200 6300 6500 6600) (6100 6300 6400 6600 6700) (6200 6400 6500 6700 6800) (6300 6500 6600 6800 6900) (6400 6600 6700 6900 7000) (6500 6700 6800 7000 7100) (6600 6800 6900 7100 6000) (6700 6900 7000 6000 6100) (6800 7000 7100 6100 6200) (6900 7100 6000 6200 6300) (7000 6000 6100 6300 6400) (7100 6100 6200 6400 6500) (6000 6100 6300 6500 6600) (6100 6200 6400 6600 6700) (6200 6300 6500 6700 6800) (6300 6400 6600 6800 6900) (6400 6500 6700 6900 7000) (6500 6600 6800 7000 7100) (6600 6700 6900 7100 6000) (6700 6800 7000 6000 6100) (6800 6900 7100 6100 6200) (6900 7000 6000 6200 6300) (7000 7100 6100 6300 6400) (7100 6000 6200 6400 6500) (6000 6100 6300 6400 6700) (6100 6200 6400 6500 6800) (6200 6300 6500 6600 6900) (6300 6400 6600 6700 7000) (6400 6500 6700 6800 7100) (6500 6600 6800 6900 6000) (6600 6700 6900 7000 6100) (6700 6800 7000 7100 6200) (6800 6900 7100 6000 6300) (6900 7000 6000 6100 6400) (7000 7100 6100 6200 6500) (7100 6000 6200 6300 6600) (6000 6300 6400 6600 6700) (6100 6400 6500 6700 6800) (6200 6500 6600 6800 6900) (6300 6600 6700 6900 7000) (6400 6700 6800 7000 7100) (6500 6800 6900 7100 6000) (6600 6900 7000 6000 6100) (6700 7000 7100 6100 6200) (6800 7100 6000 6200 6300) (6900 6000 6100 6300 6400) (7000 6100 6200 6400 6500) (7100 6200 6300 6500 6600) (6000 6100 6300 6400 6800) (6100 6200 6400 6500 6900) (6200 6300 6500 6600 7000) (6300 6400 6600 6700 7100) (6400 6500 6700 6800 6000) (6500 6600 6800 6900 6100) (6600 6700 6900 7000 6200) (6700 6800 7000 7100 6300) (6800 6900 7100 6000 6400) (6900 7000 6000 6100 6500) (7000 7100 6100 6200 6600) (7100 6000 6200 6300 6700) (6000 6100 6400 6500 6700) (6100 6200 6500 6600 6800) (6200 6300 6600 6700 6900) (6300 6400 6700 6800 7000) (6400 6500 6800 6900 7100) (6500 6600 6900 7000 6000) (6600 6700 7000 7100 6100) (6700 6800 7100 6000 6200) (6800 6900 6000 6100 6300) (6900 7000 6100 6200 6400) (7000 7100 6200 6300 6500) (7100 6000 6300 6400 6600) (6000 6200 6300 6600 6700) (6100 6300 6400 6700 6800) (6200 6400 6500 6800 6900) (6300 6500 6600 6900 7000) (6400 6600 6700 7000 7100) (6500 6700 6800 7100 6000) (6600 6800 6900 6000 6100) (6700 6900 7000 6100 6200) (6800 7000 7100 6200 6300) (6900 7100 6000 6300 6400) (7000 6000 6100 6400 6500) (7100 6100 6200 6500 6600) (6000 6100 6300 6600 6700) (6100 6200 6400 6700 6800) (6200 6300 6500 6800 6900) (6300 6400 6600 6900 7000) (6400 6500 6700 7000 7100) (6500 6600 6800 7100 6000) (6600 6700 6900 6000 6100) (6700 6800 7000 6100 6200) (6800 6900 7100 6200 6300) (6900 7000 6000 6300 6400) (7000 7100 6100 6400 6500) (7100 6000 6200 6500 6600) (6000 6100 6400 6600 6700) (6100 6200 6500 6700 6800) (6200 6300 6600 6800 6900) (6300 6400 6700 6900 7000) (6400 6500 6800 7000 7100) (6500 6600 6900 7100 6000) (6600 6700 7000 6000 6100) (6700 6800 7100 6100 6200) (6800 6900 6000 6200 6300) (6900 7000 6100 6300 6400) (7000 7100 6200 6400 6500) (7100 6000 6300 6500 6600) (6000 6100 6400 6500 6800) (6100 6200 6500 6600 6900) (6200 6300 6600 6700 7000) (6300 6400 6700 6800 7100) (6400 6500 6800 6900 6000) (6500 6600 6900 7000 6100) (6600 6700 7000 7100 6200) (6700 6800 7100 6000 6300) (6800 6900 6000 6100 6400) (6900 7000 6100 6200 6500) (7000 7100 6200 6300 6600) (7100 6000 6300 6400 6700) (6000 6300 6400 6700 6800) (6100 6400 6500 6800 6900) (6200 6500 6600 6900 7000) (6300 6600 6700 7000 7100) (6400 6700 6800 7100 6000) (6500 6800 6900 6000 6100) (6600 6900 7000 6100 6200) (6700 7000 7100 6200 6300) (6800 7100 6000 6300 6400) (6900 6000 6100 6400 6500) (7000 6100 6200 6500 6600) (7100 6200 6300 6600 6700) (6000 6100 6400 6700 6800) (6100 6200 6500 6800 6900) (6200 6300 6600 6900 7000) (6300 6400 6700 7000 7100) (6400 6500 6800 7100 6000) (6500 6600 6900 6000 6100) (6600 6700 7000 6100 6200) (6700 6800 7100 6200 6300) (6800 6900 6000 6300 6400) (6900 7000 6100 6400 6500) (7000 7100 6200 6500 6600) (7100 6000 6300 6600 6700) (6000 6100 6300 6500 6700) (6100 6200 6400 6600 6800) (6200 6300 6500 6700 6900) (6300 6400 6600 6800 7000) (6400 6500 6700 6900 7100) (6500 6600 6800 7000 6000) (6600 6700 6900 7100 6100) (6700 6800 7000 6000 6200) (6800 6900 7100 6100 6300) (6900 7000 6000 6200 6400) (7000 7100 6100 6300 6500) (7100 6000 6200 6400 6600) (6000 6200 6400 6600 6700) (6100 6300 6500 6700 6800) (6200 6400 6600 6800 6900) (6300 6500 6700 6900 7000) (6400 6600 6800 7000 7100) (6500 6700 6900 7100 6000) (6600 6800 7000 6000 6100) (6700 6900 7100 6100 6200) (6800 7000 6000 6200 6300) (6900 7100 6100 6300 6400) (7000 6000 6200 6400 6500) (7100 6100 6300 6500 6600) (6000 6200 6300 6500 6800) (6100 6300 6400 6600 6900) (6200 6400 6500 6700 7000) (6300 6500 6600 6800 7100) (6400 6600 6700 6900 6000) (6500 6700 6800 7000 6100) (6600 6800 6900 7100 6200) (6700 6900 7000 6000 6300) (6800 7000 7100 6100 6400) (6900 7100 6000 6200 6500) (7000 6000 6100 6300 6600) (7100 6100 6200 6400 6700) (6000 6300 6500 6600 6800) (6100 6400 6600 6700 6900) (6200 6500 6700 6800 7000) (6300 6600 6800 6900 7100) (6400 6700 6900 7000 6000) (6500 6800 7000 7100 6100) (6600 6900 7100 6000 6200) (6700 7000 6000 6100 6300) (6800 7100 6100 6200 6400) (6900 6000 6200 6300 6500) (7000 6100 6300 6400 6600) (7100 6200 6400 6500 6700) (6000 6200 6400 6500 6800) (6100 6300 6500 6600 6900) (6200 6400 6600 6700 7000) (6300 6500 6700 6800 7100) (6400 6600 6800 6900 6000) (6500 6700 6900 7000 6100) (6600 6800 7000 7100 6200) (6700 6900 7100 6000 6300) (6800 7000 6000 6100 6400) (6900 7100 6100 6200 6500) (7000 6000 6200 6300 6600) (7100 6100 6300 6400 6700) (6000 6300 6400 6600 6800) (6100 6400 6500 6700 6900) (6200 6500 6600 6800 7000) (6300 6600 6700 6900 7100) (6400 6700 6800 7000 6000) (6500 6800 6900 7100 6100) (6600 6900 7000 6000 6200) (6700 7000 7100 6100 6300) (6800 7100 6000 6200 6400) (6900 6000 6100 6300 6500) (7000 6100 6200 6400 6600) (7100 6200 6300 6500 6700) (6000 6200 6300 6600 6800) (6100 6300 6400 6700 6900) (6200 6400 6500 6800 7000) (6300 6500 6600 6900 7100) (6400 6600 6700 7000 6000) (6500 6700 6800 7100 6100) (6600 6800 6900 6000 6200) (6700 6900 7000 6100 6300) (6800 7000 7100 6200 6400) (6900 7100 6000 6300 6500) (7000 6000 6100 6400 6600) (7100 6100 6200 6500 6700) (6000 6200 6500 6600 6800) (6100 6300 6600 6700 6900) (6200 6400 6700 6800 7000) (6300 6500 6800 6900 7100) (6400 6600 6900 7000 6000) (6500 6700 7000 7100 6100) (6600 6800 7100 6000 6200) (6700 6900 6000 6100 6300) (6800 7000 6100 6200 6400) (6900 7100 6200 6300 6500) (7000 6000 6300 6400 6600) (7100 6100 6400 6500 6700) (6000 6100 6400 6600 6800) (6100 6200 6500 6700 6900) (6200 6300 6600 6800 7000) (6300 6400 6700 6900 7100) (6400 6500 6800 7000 6000) (6500 6600 6900 7100 6100) (6600 6700 7000 6000 6200) (6700 6800 7100 6100 6300) (6800 6900 6000 6200 6400) (6900 7000 6100 6300 6500) (7000 7100 6200 6400 6600) (7100 6000 6300 6500 6700) (6000 6200 6400 6700 6800) (6100 6300 6500 6800 6900) (6200 6400 6600 6900 7000) (6300 6500 6700 7000 7100) (6400 6600 6800 7100 6000) (6500 6700 6900 6000 6100) (6600 6800 7000 6100 6200) (6700 6900 7100 6200 6300) (6800 7000 6000 6300 6400) (6900 7100 6100 6400 6500) (7000 6000 6200 6500 6600) (7100 6100 6300 6600 6700) (6000 6100 6300 6600 6900) (6100 6200 6400 6700 7000) (6200 6300 6500 6800 7100) (6300 6400 6600 6900 6000) (6400 6500 6700 7000 6100) (6500 6600 6800 7100 6200) (6600 6700 6900 6000 6300) (6700 6800 7000 6100 6400) (6800 6900 7100 6200 6500) (6900 7000 6000 6300 6600) (7000 7100 6100 6400 6700) (7100 6000 6200 6500 6800) (6000 6200 6300 6600 6900) (6100 6300 6400 6700 7000) (6200 6400 6500 6800 7100) (6300 6500 6600 6900 6000) (6400 6600 6700 7000 6100) (6500 6700 6800 7100 6200) (6600 6800 6900 6000 6300) (6700 6900 7000 6100 6400) (6800 7000 7100 6200 6500) (6900 7100 6000 6300 6600) (7000 6000 6100 6400 6700) (7100 6100 6200 6500 6800) (6000 6100 6400 6600 6900) (6100 6200 6500 6700 7000) (6200 6300 6600 6800 7100) (6300 6400 6700 6900 6000) (6400 6500 6800 7000 6100) (6500 6600 6900 7100 6200) (6600 6700 7000 6000 6300) (6700 6800 7100 6100 6400) (6800 6900 6000 6200 6500) (6900 7000 6100 6300 6600) (7000 7100 6200 6400 6700) (7100 6000 6300 6500 6800) (6000 6200 6500 6600 6900) (6100 6300 6600 6700 7000) (6200 6400 6700 6800 7100) (6300 6500 6800 6900 6000) (6400 6600 6900 7000 6100) (6500 6700 7000 7100 6200) (6600 6800 7100 6000 6300) (6700 6900 6000 6100 6400) (6800 7000 6100 6200 6500) (6900 7100 6200 6300 6600) (7000 6000 6300 6400 6700) (7100 6100 6400 6500 6800) (6000 6200 6400 6600 6900) (6100 6300 6500 6700 7000) (6200 6400 6600 6800 7100) (6300 6500 6700 6900 6000) (6400 6600 6800 7000 6100) (6500 6700 6900 7100 6200) (6600 6800 7000 6000 6300) (6700 6900 7100 6100 6400) (6800 7000 6000 6200 6500) (6900 7100 6100 6300 6600) (7000 6000 6200 6400 6700) (7100 6100 6300 6500 6800))) :lonset (quote (0 500 1000 1500 2000 2500 3000 3500 4000 4500 5000 5500 6000 6500 7000 7500 8000 8500 9000 9500 10000 10500 11000 11500 12500 13000 13500 14000 14500 15000 15500 16000 16500 17000 17500 18000 19000 19500 20000 20500 21000 21500 22000 22500 23000 23500 24000 24500 25000 25500 26000 26500 27000 27500 28000 28500 29000 29500 30000 30500 31500 32000 32500 33000 33500 34000 34500 35000 35500 36000 36500 37000 38000 38500 39000 39500 40000 40500 41000 41500 42000 42500 43000 43500 44000 44500 45000 45500 46000 46500 47000 47500 48000 48500 49000 49500 50500 51000 51500 52000 52500 53000 53500 54000 54500 55000 55500 56000 56500 57000 57500 58000 58500 59000 59500 60000 60500 61000 61500 62000 63000 63500 64000 64500 65000 65500 66000 66500 67000 67500 68000 68500 69000 69500 70000 70500 71000 71500 72000 72500 73000 73500 74000 74500 75500 76000 76500 77000 77500 78000 78500 79000 79500 80000 80500 81000 82000 82500 83000 83500 84000 84500 85000 85500 86000 86500 87000 87500 88000 88500 89000 89500 90000 90500 91000 91500 92000 92500 93000 93500 94500 95000 95500 96000 96500 97000 97500 98000 98500 99000 99500 100000 100500 101000 101500 102000 102500 103000 103500 104000 104500 105000 105500 106000 107000 107500 108000 108500 109000 109500 110000 110500 111000 111500 112000 112500 113000 113500 114000 114500 115000 115500 116000 116500 117000 117500 118000 118500 119500 120000 120500 121000 121500 122000 122500 123000 123500 124000 124500 125000 125500 126000 126500 127000 127500 128000 128500 129000 129500 130000 130500 131000 132000 132500 133000 133500 134000 134500 135000 135500 136000 136500 137000 137500 138000 138500 139000 139500 140000 140500 141000 141500 142000 142500 143000 143500 144500 145000 145500 146000 146500 147000 147500 148000 148500 149000 149500 150000 150500 151000 151500 152000 152500 153000 153500 154000 154500 155000 155500 156000 157000 157500 158000 158500 159000 159500 160000 160500 161000 161500 162000 162500 163000 163500 164000 164500 165000 165500 166000 166500 167000 167500 168000 168500 169500 170000 170500 171000 171500 172000 172500 173000 173500 174000 174500 175000 176000)) :ldur (quote ((1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000))) :lvel (quoteloffset (quote ((0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0))) :lchan (quote ((1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1) (1 1 1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.2 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (show-stems obj-mode palette-mode winpos winsize mode grillestep notechancolor? zoom inport outport deltapict cmnpref staff fontsize approx microplay scale cursor-mode score-mode)) (list (quote t) 0 0 (om-make-point 0 0) (om-make-point 500 280) 0 1000 nil 1 0 0 (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2 nil nil (quote :normal) 0)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list2" (quote list) (quote nil) (om-make-point 347 47) (om-make-point 80 28) (list 1 3 2 3 2 5) "(1 3 2 3 2 5)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list3" (quote list) (quote nil) (om-make-point 442 46) (om-make-point 32 29) 2 "2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "P->MC1" (quote p->mc) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" nil))) (om-make-point 437 248) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ1" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "LMIDIC" (list 6000)) (om-load-inputfun (quote input-funbox) "no documentation" "LONSET" (list 0 400)) (om-load-inputfun (quote input-funbox) "no documentation" "LDUR" (list 1000)) (om-load-inputfun (quote input-funbox) "no documentation" "LVEL" (list 100)) (om-load-inputfun (quote input-funbox) "no documentation" "LOFFSET" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "no documentation" "LEGATO" 0))) (om-make-point 431 318) (om-make-point 91 58) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5000) (5200) (5500) (5700) (6200) (6300) (6600) (6800) (7100) (7300) (7800) (7900) (8200) (8400))) :lonset (quote (0 400 800 1200 1600 2000 2400 2800 3200 3600 4000 4400 4800 5200 6200)) :ldur (quote ((1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000) (1000))) :lvel (quote ((100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100) (100))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (player score-mode cursor-mode show-stems obj-mode palette-mode winpos winsize mode grillestep notechancolor? zoom inport outport deltapict cmnpref staff fontsize approx microplay scale)) (list (quote :midi-player) 0 (quote :normal) (quote t) 0 0 (om-make-point 0 0) (om-make-point 500 280) 0 1000 nil 1 0 0 (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote gf) 24 2 nil nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FIND-PC-IN-FIELD" (quote find-pc-in-field) (quote ((om-load-inputfun (quote input-funbox) "mod-12 integer (or list of them)" "PC" 0) (om-load-inputfun (quote input-funbox) "list of integers" "FIELD" (list 0 2 5 7 10 12 15)))) (om-make-point 520 248) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list4" (quote list) (quote nil) (om-make-point 477 172) (om-make-point 152 28) (list 0 1 2 3 4 5 6 7 8 9 10 11) "(0 1 2 3 4 5 6 7 8 9 10 11)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "P->MC11" (quote p->mc) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" nil))) (om-make-point 668 267) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ11" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "LMIDIC" (list 6000)) (om-load-inputfun (quote input-funbox) "no documentation" "LONSET" (list 0 400)) (om-load-inputfun (quote input-funbox) "no documentation" "LDUR" (list 1000)) (om-load-inputfun (quote input-funbox) "no documentation" "LVEL" (list 100)) (om-load-inputfun (quote input-funbox) "no documentation" "LOFFSET" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "no documentation" "LEGATO" 0))) (om-make-point 614 325) (om-make-point 91 58) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8400) (7300) (5000 6200) (6300) (5200) (5200) (6600 7800) (5500 7900) (6800) (5700) (8200) (7100))) :lonset (quote (0 400 800 1200 1600 2000 2400 2800 3200 3600 4000 4400 5400)) :ldur (quote ((1000) (1000) (1000 1000) (1000) (1000) (1000) (1000 1000) (1000 1000) (1000) (1000) (1000) (1000))) :lvel (quote ((100) (100) (100 100) (100) (100) (100) (100 100) (100 100) (100) (100) (100) (100))) :loffset (quote ((0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1 1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (player score-mode cursor-mode show-stems obj-mode palette-mode winpos winsize mode grillestep notechancolor? zoom inport outport deltapict cmnpref staff fontsize approx microplay scale)) (list (quote :midi-player) 0 (quote :normal) (quote t) 0 0 (om-make-point 0 0) (om-make-point 500 280) 0 1000 nil 1 0 0 (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote gf) 24 2 nil nil)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 46 28) (quote "*POOL*") "" (om-make-point 181 37) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment1" (om-make-point 47 28) (quote "*FIELD*") "" (om-make-point 487 44) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "NESTING->TIMING1" (quote nesting->timing) (quote ((om-load-inputfun (quote input-funbox) "nested list of numbers" "LST" nil) (om-load-inputfun (quote input-funbox) "number of nested levels to flatten [or if negative, abs val is number of nested levels to remain after flattening]" "LEVELS" -1) (om-load-inputfun (quote input-funbox) "time unit separating members of same sublist (multiplied at sublist boundaries)" "TIME-UNIT" 500))) (om-make-point 210 575) nil nil nil nil 2))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LENGTH" (quote length) (quote ((om-load-inputfun (quote input-funbox) "SEQUENCE" "SEQUENCE" nil))) (om-make-point 114 706) nil nil nil "length" 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((22 0 0 0 nil 0) (23 0 0 1 nil 0) (8 0 3 0 nil 0) (18 0 4 0 nil 7) (0 0 4 1 nil 2) (32 0 5 0 nil 0) (5 0 6 1 nil 0) (32 1 6 2 nil 0) (8 0 7 1 nil 0) (9 1 7 2 nil 0) (9 0 8 0 nil 0) (12 0 9 0 nil 0) (10 0 11 0 nil 0) (11 0 12 0 nil 0) (4 0 12 1 nil 0) (14 0 13 0 nil 0) (16 0 15 0 nil 0) (13 0 15 1 nil 0) (17 0 16 0 nil 0) (15 0 18 0 nil 0) (18 0 19 0 nil 7) (19 0 20 0 nil 0) (20 0 21 1 nil 0) (19 1 21 2 nil 0) (0 0 24 0 nil 12) (24 0 25 1 nil 0) (27 0 26 0 nil 0) (0 0 26 1 nil 12) (26 0 28 0 nil 0) (28 0 29 1 nil 0) (4 0 32 0 nil 0) (5 0 33 0 nil 0))) nil 6.2))
